{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PowerBiDatasetRefresh"
		},
		"Blobtoblobcpysrc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blobtoblobcpysrc'"
		},
		"Edina_Dev_Sql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Edina_Dev_Sql'"
		},
		"blobtoblobcpydestination_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobtoblobcpydestination'"
		},
		"cars_Sql_destination_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cars_Sql_destination'"
		},
		"cars_cpy_data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cars_cpy_data'"
		},
		"db_parametrization_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'db_parametrization'"
		},
		"ecars_edina_ayush_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ecars_edina_ayush'"
		},
		"param_input_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'param_input'"
		},
		"param_output_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'param_output'"
		},
		"watermark_data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'watermark_data'"
		},
		"zip_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'zip'"
		},
		"SAS_SRC_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'SAS_SRC'"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/43b4bb12-b882-46e7-93a4-0e6afb14206a/resourceGroups/amitmanndemo/providers/Microsoft.Storage/storageAccounts/amitmanndemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BlobQuery')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blobtoblobdest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Carscsv')]",
				"[concat(variables('factoryId'), '/datasets/blobtoblobdest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_2eu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "blob to blob cpy",
				"activities": [
					{
						"name": "Copy_2eu",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "car//cars.txt"
							},
							{
								"name": "Destination",
								"value": "cars2//cars2.txt"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "blobtoblobcpydestination",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2eu",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2eu",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_2eu')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_2eu')]",
				"[concat(variables('factoryId'), '/linkedServices/blobtoblobcpydestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_FRM_FILE_TO_TABLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPA_FRM_FILE_TO_TABLE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Location ID",
											"type": "String"
										},
										"sink": {
											"name": "Location_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "1 mile pop",
											"type": "String"
										},
										"sink": {
											"name": "One_mile",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "3 mile pop",
											"type": "String"
										},
										"sink": {
											"name": "Three_mile",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "5 mile pop",
											"type": "String"
										},
										"sink": {
											"name": "Five_mile",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Actual Opening",
											"type": "String"
										},
										"sink": {
											"name": "actual_opening",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AverageTerm",
											"type": "String"
										},
										"sink": {
											"name": "actual_term",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Avg  monthly gross personal training revenue",
											"type": "String"
										},
										"sink": {
											"name": "average_monthly_gross_revenue",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BOE Verified",
											"type": "String"
										},
										"sink": {
											"name": "BOE_verified",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Close Date",
											"type": "String"
										},
										"sink": {
											"name": "closedate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Competition",
											"type": "String"
										},
										"sink": {
											"name": "Competetion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "E-mail Address",
											"type": "String"
										},
										"sink": {
											"name": "Mailing_Address",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Exchange Rate",
											"type": "String"
										},
										"sink": {
											"name": "Exchange_rate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Existing Sales Rep",
											"type": "String"
										},
										"sink": {
											"name": "Existing_rate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Express Location",
											"type": "String"
										},
										"sink": {
											"name": "Express_Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Financing Type",
											"type": "String"
										},
										"sink": {
											"name": "Financial_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Gross Rent",
											"type": "String"
										},
										"sink": {
											"name": "Gross_rent",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Hours of Operation",
											"type": "String"
										},
										"sink": {
											"name": "Hours_of_Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Lack of marketing",
											"type": "String"
										},
										"sink": {
											"name": "Lack_of_Marketing",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_FRM_FILE_INPUT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_FRM_TABLE_DESTINATION",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "FRM FILE LOAD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FRM_FILE_INPUT')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_FRM_TABLE_DESTINATION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_Logtaskcontrol_to_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKA_InsertLogtaskControlFlowKey",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[process].[InsertLogTaskControlFlow]",
								"storedProcedureParameters": {
									"adfRunId": {
										"type": "String"
									},
									"dataFactory": {
										"type": "String"
									},
									"dataLoadStatus": {
										"type": "String",
										"value": "In Progress"
									},
									"endingActivity": {
										"type": "String"
									},
									"groupId": {
										"type": "Int64"
									},
									"mainEntityName": {
										"type": "String"
									},
									"pipeline": {
										"type": "String"
									},
									"schemaName": {
										"type": "String"
									},
									"startingActivity": {
										"type": "String"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_ADLS_LOGTASKCONTROL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKA_InsertLogtaskControlFlowKey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Insert into cars table ",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "yearof",
											"type": "String"
										},
										"sink": {
											"name": "yearof",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_EDINA_DEV_CARS_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Log_Task_Control_key"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_LOGTASKCONTROL')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_EDINA_DEV_CARS_TABLE')]",
				"[concat(variables('factoryId'), '/datasets/Carscsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_parametrization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "db_parametrization",
								"type": "DatasetReference",
								"parameters": {
									"table": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"dbname": {
										"value": "@pipeline().parameters.server",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "db_parametrization",
								"type": "DatasetReference",
								"parameters": {
									"table": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"dbname": {
										"value": "@pipeline().parameters.dbname",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"server": {
						"type": "string"
					},
					"dbname": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_parametrization')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_to_diff_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sql_csv_to_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "diff_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_csv_to_table')]",
				"[concat(variables('factoryId'), '/datasets/diff_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/executepipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select max(PersonId) as id from data_source_table_demo",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "lookup_dataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lookup_activity_copy1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"val": {
									"value": "@activity('Lookup1').output",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lookup_activity_copy1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"val": {
									"value": "@activity('Lookup1').output",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_dataset')]",
				"[concat(variables('factoryId'), '/pipelines/lookup_activity_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select max(PersonId) as id from data_source_table_demo",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "lookup_dataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from lookup_val where PersonID < '@{activity('Lookup1').output.firstRow.id}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "lookup_val",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_dataset')]",
				"[concat(variables('factoryId'), '/datasets/lookup_val')]",
				"[concat(variables('factoryId'), '/datasets/Carscsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_activity_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from lookup_val where PersonID < pipeline().parameters.val",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "lookup_val",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"val": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookup_val')]",
				"[concat(variables('factoryId'), '/datasets/Carscsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String"
										},
										"sink": {
											"name": "yearof",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "param_input",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "param_output",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"filename": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/param_input')]",
				"[concat(variables('factoryId'), '/datasets/param_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/paramsrs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String"
										},
										"sink": {
											"name": "yearof",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "paraminput2",
								"type": "DatasetReference",
								"parameters": {
									"inputfile": {
										"value": "@pipeline().parameters.inputfile",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "param_output",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"inputfile": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/paraminput2')]",
				"[concat(variables('factoryId'), '/datasets/param_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "lookup_activity",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"concurrency": 1,
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/lookup_activity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_csv_to_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String"
										},
										"sink": {
											"name": "yearof",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_csv_to_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Carscsv')]",
				"[concat(variables('factoryId'), '/datasets/sql_csv_to_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_table_to_diff_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "yearof",
											"type": "String"
										},
										"sink": {
											"name": "yearof",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sql_csv_to_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "table_to_diff_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_csv_to_table')]",
				"[concat(variables('factoryId'), '/datasets/table_to_diff_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_table_to_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "yearof",
											"type": "String"
										},
										"sink": {
											"name": "yearof",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "sql_csv_to_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_csv_to_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_csv_to_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/udt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[load_passing]",
								"sqlWriterTableType": "Strings1",
								"storedProcedureTableTypeParameterName": "Strings"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "val",
											"type": "String"
										},
										"sink": {
											"name": "val"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "UDT_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UDT_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UDT_Source')]",
				"[concat(variables('factoryId'), '/datasets/UDT_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldwatermarkactivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "azurewatermarktable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LookupNewwatermarkactivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table_demo",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "watermark_source_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "incrementalcopyactivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupNewwatermarkactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupOldwatermarkactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_table where LastModifytime > '@{activity('LookupOldwatermarkactivity').output.firstRow.WatermarkValue}' and LastModifytime<= '@{activity('LookupNewwatermarkactivity').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "watermark_source_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SPWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "incrementalcopyactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "watermark_data",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azurewatermarktable')]",
				"[concat(variables('factoryId'), '/datasets/watermark_source_table')]",
				"[concat(variables('factoryId'), '/datasets/Carscsv')]",
				"[concat(variables('factoryId'), '/linkedServices/watermark_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_error')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldwatermarkactivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "azurewatermarktable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LookupNewwatermarkactivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table_demo",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "watermark_source_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "incrementalcopyactivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupNewwatermarkactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupOldwatermarkactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_table where LastModifytime > '@{activity('LookupOldwatermarkactivity').output.firstRow.WatermarkValue}' and LastModifytime<= '@{activity('LookupNewwatermarkactivity').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "watermark_source_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Carscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SPWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "incrementalcopyactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "watermark_data",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "incrementalcopyactivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_error_log]"
						},
						"linkedServiceName": {
							"referenceName": "watermark_data",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azurewatermarktable')]",
				"[concat(variables('factoryId'), '/datasets/watermark_source_table')]",
				"[concat(variables('factoryId'), '/datasets/Carscsv')]",
				"[concat(variables('factoryId'), '/linkedServices/watermark_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/web activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://dummy.restapiexample.com/api/v1/create",
							"method": "POST",
							"headers": {},
							"body": {
								"name": "test",
								"salary": "123",
								"age": "23"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Carscsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blobtoblobcpysrc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cars2.txt",
						"container": "car"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blobtoblobcpysrc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_EDINA_DEV_CARS_CPY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "yearof",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "carscpy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_EDINA_DEV_CARS_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LogTaskControl"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "yearof",
						"type": "varchar"
					},
					{
						"name": "createddate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_FRM_FILE_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "param_input",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "frm file"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FRMLocation20200304-080016.csv",
						"container": "input"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/param_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_FRM_TABLE_DESTINATION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cars_Sql_destination",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "frm file"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FRM_FILE1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cars_Sql_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_LOGTASKCONTROL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "LogTaskControl"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LogTaskControlFlowKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DataFactory",
						"type": "nvarchar"
					},
					{
						"name": "Pipeline",
						"type": "nvarchar"
					},
					{
						"name": "StartingActivity",
						"type": "nvarchar"
					},
					{
						"name": "EndingActivity",
						"type": "nvarchar"
					},
					{
						"name": "SchemaName",
						"type": "nvarchar"
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "TotalRowsFromSource",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalRowsFailed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalRowsInserted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalRowsUpdated",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GroupId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DataLoadStatus",
						"type": "nvarchar"
					},
					{
						"name": "MainEntityName",
						"type": "varchar"
					},
					{
						"name": "AdfRunId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "process",
					"table": "LogTaskControlFlow"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "zip",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cars.zip",
						"container": "zip"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/zip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_2eu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobtoblobcpydestination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cars2.txt",
						"container": "cars2"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobtoblobcpydestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2eu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAS_SRC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cars.txt",
						"container": "car"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAS_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UDT_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "val",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Strings_val"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UDT_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "val",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "strings_val1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azurewatermarktable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "watermark_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable_demo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/watermark_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobtoblobdest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobtoblobcpydestination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cars2.txt",
						"container": "cars2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobtoblobcpydestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_parametrization')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "db_parametrization",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbname": {
							"value": "@dataset().dbname",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dbname": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/db_parametrization')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/diff_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ecars_edina_ayush",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "yearof",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ecars_edina_ayush')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/increment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blobtoblobcpysrc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@CONCAT('Incremental-', pipeline().RunId, '.txt')",
							"type": "Expression"
						},
						"folderPath": "incrementalcopy",
						"container": "car"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blobtoblobcpysrc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "watermark_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "data_source_table_demo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/watermark_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_val')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "watermark_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "lookup_val"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/watermark_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "param_input",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/param_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "param_output",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "yearof",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/param_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/paraminput2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "param_input",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"inputfile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().inputfile",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/param_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_csv_to_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cars_Sql_destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "cars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cars_Sql_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_to_diff_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cars_cpy_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "yearof",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "carscpy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cars_cpy_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_source_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "watermark_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "data_source_table_demo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/watermark_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blobtoblobcpysrc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blobtoblobcpysrc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Edina_Dev_Sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Edina_Dev_Sql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAS_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('SAS_SRC_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobtoblobcpydestination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobtoblobcpydestination_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars_Sql_destination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('cars_Sql_destination_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cars_cpy_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('cars_cpy_data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_parametrization')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dbname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('db_parametrization_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecars_edina_ayush')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ecars_edina_ayush_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('param_input_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_output')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('param_output_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermark_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('watermark_data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/zip')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('zip_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_csv_to_table",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/car/blobs/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_csv_to_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FOR_EACH_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FOR_EACH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\n Select * from Edina_dev.INFORMATION_SCHEMA.TABLES WHERE (TABLE_NAME ='CARS')    OR (TABLE_NAME='PLANES '  ) ",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_FOR_EACH_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_FOR_EACH_GENERIC",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"schemaname": {
													"value": "@item().table_schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_FOR_EACH",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().table_schema,'_',item().table_name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FOR_EACH_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_FOR_EACH_GENERIC')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_FOR_EACH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_FOR_EACH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blobtoblobcpysrc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "car"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blobtoblobcpysrc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FOR_EACH_GENERIC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Edina_Dev_Sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schemaname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaname",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Edina_Dev_Sql')]"
			]
		}
	]
}